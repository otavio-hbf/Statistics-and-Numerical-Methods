{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "1s3w5UIbzY0H"
      ],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/otavio-hbf/CS50-projects/blob/main/P1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **I) Resumo**"
      ],
      "metadata": {
        "id": "JKt8k7A_zNoJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "8Fa85jt4zTYL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **II) Introdução e Objetivos**"
      ],
      "metadata": {
        "id": "1s3w5UIbzY0H"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "hVOJ_FgnznhF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **III) Modelo**\n"
      ],
      "metadata": {
        "id": "TvDrl81Gz6-7"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### O modelo abaixo descreve a interação entre duas espécies competindo por um único recurso limitado."
      ],
      "metadata": {
        "id": "ydKoiuKRX9kD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### $\\dfrac{dA_1}{dt} = \\dfrac{a_1b_1RA_1}{1 + a_1h_1R} - μ_1A_1$ ,##\n",
        "### $\\dfrac{dA_2}{dt} = \\dfrac{a_2b_2RA_2}{1 + a_2h_2R} - μ_2A_2$ ,##\n",
        "### $\\dfrac{dR}{dt} = f(t) - jR - \\dfrac{a_1RA_1}{1 + a_1h_1R} - \\dfrac{a_2RA_2}{1 + a_2h_2R}$\n"
      ],
      "metadata": {
        "id": "FaefOXknO3cY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "| Variável   | Significado                              ||\n",
        "|------------|------------------------------------------|--------|\n",
        "|$A_i $|Densidade populacional da espécie i             |        |\n",
        "|$R   $|Densidade de Recursos                           |        |\n",
        "|$t   $|Tempo                                           |        |\n",
        "|$a_i $|Taxa em que a espécie i se reproduz             |        |\n",
        "|$b_i $|Coeficiente de conversão de nutriente para biomassa da espécie i   |        |\n",
        "|$h_i $|Tempo de obtenção do recurso pela espécie i     |        |\n",
        "|$μ_i $|Taxa de Mortalidade da espécie i                |        |\n",
        "|$f(t)$|Entrada de nutriente                            |        |\n",
        "|$j $  |Taxa de esgotamento dos nutrientes              |        |"
      ],
      "metadata": {
        "id": "PmfpmYIwQKdB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##**Código do Modelo**"
      ],
      "metadata": {
        "id": "K5uAlJtdYCsa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#importando os pacotes necessários para a modelagem da ODE\n",
        "\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from scipy.integrate import odeint"
      ],
      "metadata": {
        "id": "4QrWXRxxPA76"
      },
      "execution_count": 115,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "A10 = 0; A20= 0; R0= 0; a1= 0;a2= 0; b1= 0; b2= 0; h1= 0; h2= 0; u1= 0; u2= 0; j= 0;\n",
        "param = A10, A20, R0, a1,a2, b1 , b2, h1, h2, u1, u2, j"
      ],
      "metadata": {
        "id": "G2mJq506Uqll"
      },
      "execution_count": 116,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def func1(x):\n",
        "  return 10;\n",
        "\n",
        "def func2(x):\n",
        "  return x**2"
      ],
      "metadata": {
        "id": "NG_mJM24HrkL"
      },
      "execution_count": 117,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def deriv(y, t, setMyFunc, param):\n",
        "  A10, A20, R0, a1,a2, b1 , b2, h1, h2, u1, u2, ft, j = param\n",
        "  ft = setMyFunc(t)\n",
        "  A1, A2, R = y\n",
        "  dA1dt = (a1*b1*R*A1) / (1+a1*h1*R) - u1*A1\n",
        "  dA2dt = (a2*b2*R*A2) / (1+a2*h2*R) - u2*A2\n",
        "  dRdt = ft - j*R - (a1*R*A1) / (1+a1*h1*R) - (a2*b2*R*A2) / (1+a2*h2*R)\n",
        "\n",
        "  return dA1dt, dA2dt, dRdt"
      ],
      "metadata": {
        "id": "9vYcZj9dTOQE"
      },
      "execution_count": 118,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def setMyPlot(param, begin, end, interval, setMyFunc):\n",
        "\n",
        "  y0 = param[0], param[1], param[2] #A10,A20,R0\n",
        "  t = np.linspace(begin, end, interval)\n",
        "  ret = odeint(deriv, y0, t, args = (setMyFunc, param))\n",
        "  A1, A2, R = ret.T\n",
        "\n",
        "  return A1, A2, R , t"
      ],
      "metadata": {
        "id": "Wuy4uuoLTOqR"
      },
      "execution_count": 119,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def plotMyGraph(A1, A2, R, t):\n",
        "\n",
        "  fig = plt.figure(facecolor='w')\n",
        "  ax = fig.add_subplot(111, axisbelow=True)\n",
        "\n",
        "  ax.plot(t, A1, 'b', alpha=0.7, lw=2, label='A1')\n",
        "  ax.plot(t, A2, 'r', alpha=0.7, lw=2, label='A2')\n",
        "  ax.plot(t, R, 'g', alpha=0.7, lw=2, label='R')\n",
        "\n",
        "  ax.set_xlabel('Meses')\n",
        "  ax.set_ylabel('População')\n",
        "\n",
        "  #ax.set_ylim(0, 200)\n",
        "\n",
        "  legend = ax.legend(loc='best')\n",
        "  legend.get_frame().set_alpha(0.5)\n",
        "\n",
        "  plt.show()\n"
      ],
      "metadata": {
        "id": "ghaJwAj0UUZF"
      },
      "execution_count": 120,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "A1, A2, R, t = setMyPlot([5, 5, 10, 1, 1, 1, 1, 0.5, 2, 1, 0.4, 10, 1], 0, 20, 100, func1)\n",
        "plotMyGraph(A1, A2, R, t)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "k79yo-amDnU8",
        "outputId": "79dc81c0-3209-49d2-a751-ad782e84969c"
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "A1, A2, R, t = setMyPlot([5, 6, 10, 1, 1, 1, 1, 0.6, 2, 1, 0.4, 10, 1], 0, 15, 100, func2)\n",
        "plotMyGraph(A1, A2, R, t )"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "RFIyBzVISVo0",
        "outputId": "75a78eb1-0d62-439d-8218-87a9075ece19"
      },
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **IV) Resultados e discussão**"
      ],
      "metadata": {
        "id": "xiMoQ4y10MEp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **V) Conclusão**"
      ],
      "metadata": {
        "id": "JrTGEWqv0T0D"
      }
    }
  ]
}
